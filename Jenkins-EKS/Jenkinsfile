pipeline {
    agent any

    environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerhub')
	}
    stages {

        stage('Delete Cluster') {
            steps {
              catchError (err) {
              // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
                withCredentials([[
                  $class: 'AmazonWebServicesCredentialsBinding',
                  credentialsId: "aws-credentials",
                  accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                  secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                  ]]) {
                  sh "eksctl delete cluster --name laravelapp-cluster --region eu-central-1"
                  sleep(time: 180, unit: "SECONDS")
                }
                
                echo err.getMessage()
              }  
            }
        }

        stage('Create Cluster') {
            steps {
              // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
                withCredentials([[
                  $class: 'AmazonWebServicesCredentialsBinding',
                  credentialsId: "aws-credentials",
                  accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                  secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                  ]]) {
                  sh """
                  eksctl create cluster --name laravelapp-cluster --region eu-central-1 --nodes-min=3
                  aws eks update-kubeconfig --name laravelapp-cluster
                  """
                }
            }
        }

        stage('Create Namespace') {
            steps {
              // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
                withCredentials([[
                  $class: 'AmazonWebServicesCredentialsBinding',
                  credentialsId: "aws-credentials",
                  accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                  secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                  ]]) {
                  sh "kubectl create namespace laravel-app"
                }
            }
        }

        stage('Deploy Grafana') {
            steps {
              // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
                withCredentials([[
                  $class: 'AmazonWebServicesCredentialsBinding',
                  credentialsId: "aws-credentials",
                  accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                  secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                  ]]) {
                  sh """
                  cd monitoring/k8s-grafana
                  kubectl -n laravel-app apply -f grafana-datasource-config.yaml
                  kubectl -n laravel-app apply -f deployment.yaml
                  kubectl -n laravel-app apply -f service.yaml
                  """
                }
            }
        }

        stage('Deploy Prometheus') {
            steps {
              // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
                withCredentials([[
                  $class: 'AmazonWebServicesCredentialsBinding',
                  credentialsId: "aws-credentials",
                  accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                  secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                  ]]) {
                  sh """
                  cd monitoring/k8s-prometheus
                  kubectl -n laravel-app apply -f clusterRole.yaml
                  kubectl -n laravel-app apply -f config-map.yaml
                  kubectl -n laravel-app apply -f prometheus-deployment.yaml
                  kubectl -n laravel-app apply -f prometheus-service.yaml
                  """
                }
            }
        }
    }
}